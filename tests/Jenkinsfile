pipeline {
  agent none

  environment {
      SEE_ENVIRONMENT_PREPARE='if you want to know secrets'
      // https://api.slack.com/apps/AQSDLPATU/incoming-webhooks?success=1
  }

  stages {
    stage('Grab Utility Repo') {
      agent { label 'master' }
      steps {
        cleanWs()
        //sh("printenv")
        script {
          env.GIT_COMMIT_URL = "${env.GIT_URL}".replace(".git","/commit/")+"${GIT_COMMIT}"
        }
      }
    }
    stage('Attach Worker') {
      agent {
        dockerfile { // load python container
          args "--user root -v /var/run/docker.sock:/var/run/docker.sock"
          dir 'tests/docker/dind-python3'
        }
      }
      stages {
        stage('Prep environment') {
          steps {
              script {
                  sh 'apk add curl' // for Slack direct curls, no assumed plugin
              }
          }
        }
        stage('Get NeoLoad CLI') {
          steps {
              script { // Slack notification: STARTING
                  payload = '{"text":"[STARTING] NeoLoad-CLI build status.\nBranch: '+"${env.GIT_BRANCH}"+'\nSee: '+"${env.BUILD_URL}"+'\nBased on: '+"${env.GIT_COMMIT_URL}"+'"}'
                  sh """curl -s \
                  -X POST -H 'Content-type: application/json' \
                  --data '""" + payload + """' \
                  """ + env.SLACK_URL
                }
              sh "python3 -m pip install -q -e ./"
          }
        }
        stage('Run PyTest') {
          steps {
              sh """python3 -m pytest \
                  -v --junitxml=pytest_junit.xml \
                  tests \
                  --runslow
              """
          }
          post {
              always {
                  junit 'pytest_junit.xml'
              }
          }
        }
      }
        post {
          always {
              script { // Slack notification: final build status
                  payload = '{"text":"[' + "${currentBuild.currentResult}" + '] NeoLoad-CLI build status.\nBranch: '+"${env.GIT_BRANCH}"+'\nSee: '+"${env.BUILD_URL}"+'\nBased on: '+"${env.GIT_COMMIT_URL}"+'"}'
                  sh """curl -s \
                  -X POST -H 'Content-type: application/json' \
                  --data '""" + payload + """' \
                  """ + env.SLACK_URL
              }
          }
        }
    }
  }
}
