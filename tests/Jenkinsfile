pipeline {
  agent none

  environment {
      SEE_ENVIRONMENT_PREPARE='if you want to know secrets'
      // https://api.slack.com/apps/AQSDLPATU/incoming-webhooks?success=1
      CLI_BRANCH = 'UpdateSetupWithPyTestDeps'
  }

  stages {
    stage('Grab Utility Repo') {
      agent { label 'master' }
      steps {
        cleanWs()
        dir('utility') {
            git(branch: "master", url: 'https://github.com/paulsbruce/neoload-ci-utility.git')
        }
        dir('nl_project') {
            git(branch: env.CLI_BRANCH, url: 'https://github.com/Neotys-Labs/neoload-cli.git')
        }
      }
    }
    stage('Attach Worker') {
      agent {
        dockerfile { // load python container
          args "--user root --rm -v /var/run/docker.sock:/var/run/docker.sock"
          dir 'utility/docker/dind-python3'
        }
      }
      stages {
        stage('Prep environment') {
          steps {
              script {
                  sh 'apk add curl'
              }
          }
        }
        stage('Get NeoLoad CLI') {
          steps {
              script {
                  payload = '{"text":"[STARTING] NeoLoad-CLI build status.\nSee: '+"${env.BUILD_URL}"+'"}'
                  sh """curl -s \
                  -X POST -H 'Content-type: application/json' \
                  --data '""" + payload + """' \
                  """ + env.SLACK_URL
                }
              sh "python3 -m pip install -q -e nl_project/"
          }
        }
        stage('Run PyTes') {
          steps {
              dir('nl_project') {
                sh """python3 -m pytest \
                    -v --junitxml=pytest_junit.xml \
                    tests \
                    --runslow
                """
              }
          }
          post {
              always {
                  junit 'pytest_junit.xml'
              }
          }
        }
      }
        post {
          always {
              script {
                  payload = '{"text":"[' + "${currentBuild.currentResult}" + '] NeoLoad-CLI build status.\nSee: '+"${env.BUILD_URL}"+'"}'
                  sh """curl \
                  -X POST -H 'Content-type: application/json' \
                  --data '""" + payload + """' \
                  """ + env.SLACK_URL
              }
          }
        }
    }
  }
}
